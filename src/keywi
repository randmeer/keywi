#!/usr/bin/python3
from keycodes import keycodes

import os
import os.path
import sys


def key_to_id(key):
    return "0x7000000" + keycodes[key][0]


def generate_single_mapping(source_key, destination_key):
    return '{"HIDKeyboardModifierMappingSrc":' + key_to_id(source_key) + ',"HIDKeyboardModifierMappingDst":' + key_to_id(destination_key) + '}'


def concatenate_mappings(list_of_single_mappings):
    string = ",".join(list_of_single_mappings)
    return string


def write_config(concatenated_mappings):
    string = '<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDsPropertyList-1.0.dtd"><plist version="1.0"><dict><key>Label</key><string>tv.rande.keywi</string><key>ProgramArguments</key><array><string>/usr/bin/hidutil</string><string>property</string><string>--set</string><string>{"UserKeyMapping":[' + concatenated_mappings + ']}</string></array><key>RunAtLoad</key><true/></dict></plist>'
    f = open(os.path.expanduser("~/Library/LaunchAgents/tv.rande.keywi.plist"), "w")
    f.write(string)
    f.close()


def get_existing_mappings():
    string = os.popen("hidutil property --get 'UserKeyMapping'").read()
    if len(string) < 5:
        return None
    listo = string.split()
    comma = True
    for i in range(len(listo)):
        if listo[i] == 'HIDKeyboardModifierMappingDst' or listo[i] == 'HIDKeyboardModifierMappingSrc':
            listo[i] = '"' + listo[i] + '"'
        if listo[i] == "=":
            listo[i] = ":"
            listo[i+1] =  "0x" + hex(int(listo[i+1][:-1])).upper()[2:]
            if comma:
                listo.insert(i+2, ",")
            comma = not comma
    return "".join(listo)[1:-1]


def add_mapping(source_key, destination_key):
    existing_mappings = get_existing_mappings()
    new_mapping = generate_single_mapping(source_key, destination_key)

    if existing_mappings is None:
        concatenated_mappings = new_mapping
    else:
        concatenated_mappings = concatenate_mappings([existing_mappings, new_mapping])
    write_config(concatenated_mappings)
    os.system('hidutil property --set ' + "'" + '{"UserKeyMapping":[' + concatenated_mappings + ']}' + "'")


args = sys.argv[1:]

source = None
destination = None

for arg in args:
    if arg.startswith("-"):
        if arg == "-clear":
            os.system("""hidutil property --set '{"UserKeyMapping":[]}'""")
        if arg == "-get":
            os.system("""hidutil property --get 'UserKeyMapping'""")
    else:
        if arg not in keycodes:
            continue
        if source is None:
            source = arg
        else:
            destination = arg

if destination is not None:
    add_mapping(source, destination)