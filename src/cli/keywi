#!/usr/bin/python3

import os
import os.path
import sys


keycodes = {
    "a": ["04", "Keyboard a and A"],
    "b": ["05", "Keyboard b and B"],
    "c": ["06", "Keyboard c and C"],
    "d": ["07", "Keyboard d and D"],
    "e": ["08", "Keyboard e and E"],
    "f": ["09", "Keyboard f and F"],
    "g": ["0A", "Keyboard g and G"],
    "h": ["0B", "Keyboard h and H"],
    "i": ["0C", "Keyboard i and I"],
    "j": ["0D", "Keyboard j and J"],
    "k": ["0E", "Keyboard k and K"],
    "l": ["0F", "Keyboard l and L"],
    "m": ["10", "Keyboard m and M"],
    "n": ["11", "Keyboard n and N"],
    "o": ["12", "Keyboard o and O"],
    "p": ["13", "Keyboard p and P"],
    "q": ["14", "Keyboard q and Q"],
    "r": ["15", "Keyboard r and R"],
    "s": ["16", "Keyboard s and S"],
    "t": ["17", "Keyboard t and T"],
    "u": ["18", "Keyboard u and U"],
    "v": ["19", "Keyboard v and V"],
    "w": ["1A", "Keyboard w and W"],
    "x": ["1B", "Keyboard x and X"],
    "y": ["1C", "Keyboard y and Y"],
    "z": ["1D", "Keyboard z and Z"],
    "1": ["1E", "Keyboard 1 and !"],
    "2": ["1F", "Keyboard 2 and @"],
    "3": ["20", "Keyboard 3 and #"],
    "4": ["21", "Keyboard 4 and $"],
    "5": ["22", "Keyboard 5 and %"],
    "6": ["23", "Keyboard 6 and ∧"],
    "7": ["24", "Keyboard 7 and &"],
    "8": ["25", "Keyboard 8 and *"],
    "9": ["26", "Keyboard 9 and ("],
    "0": ["27", "Keyboard 0 and )"],
    "return": ["28", "Keyboard Return (ENTER)"],
    "excape": ["29", "Keyboard ESCAPE"],
    "backspace": ["2A", "Keyboard DELETE (Backspace)"],
    "tab": ["2B", "Keyboard Tab"],
    "space": ["2C", "Keyboard Spacebar"],
    "minus": ["2D", "Keyboard - and (underscore)"],
    "equals": ["2E", "Keyboard = and +"],
    "open_bracket": ["2F", "Keyboard [ and {"],
    "closed_bracket": ["30", "Keyboard ] and }"],
    "backslash": ["31", "Keyboard \ and |"],
    "": ["32", "Keyboard Non-US # and  ̃"],
    "semicolon": ["33", "Keyboard ; and :"],
    "quote": ["34", "Keyboard ‘ and “"],
    "grave_accent": ["35", "Keyboard Grave Accent and Tilde"],
    "comma": ["36", "Keyboard , and <"],
    "period": ["37", "Keyboard . and >"],
    "slash": ["38", "Keyboard / and ?"],
    "caps_lock": ["39", "Keyboard Caps Lock"],
    "f1": ["3A", "Keyboard F1"],
    "f2": ["3B", "Keyboard F2"],
    "f3": ["3C", "Keyboard F3"],
    "f4": ["3D", "Keyboard F4"],
    "f5": ["3E", "Keyboard F5"],
    "f6": ["3F", "Keyboard F6"],
    "f7": ["40", "Keyboard F7"],
    "f8": ["41", "Keyboard F8"],
    "f9": ["42", "Keyboard F9"],
    "f10": ["43", "Keyboard F10"],
    "f11": ["44", "Keyboard F11"],
    "f12": ["45", "Keyboard F12"],
    "print_screen": ["46", "Keyboard PrintScreen"],
    "scroll_lock": ["47", "Keyboard Scroll Lock"],
    "pause": ["48", "Keyboard Pause"],
    "insert": ["49", "Keyboard Insert"],
    "home": ["4A", "Keyboard Home"],
    "page_up": ["4B", "Keyboard PageUp"],
    "delete": ["4C", "Keyboard Delete Forward"],
    "end": ["4D", "Keyboard End"],
    "page_down": ["4E", "Keyboard PageDown"],
    "arrow_right": ["4F", "Keyboard RightArrow"],
    "arrow_left": ["50", "Keyboard LeftArrow"],
    "arrow_down": ["51", "Keyboard DownArrow"],
    "arrow_up": ["52", "Keyboard UpArrow"],
    "num_lock": ["53", "Keypad Num Lock and Clear"],
    "keypad_slash": ["54", "Keypad /"],
    "keypad_asterisk": ["55", "Keypad *"],
    "keypad_minus": ["56", "Keypad -"],
    "keypad_plus": ["57", "Keypad +"],
    "keypad_return": ["58", "Keypad ENTER"],
    "keypad_1": ["59", "Keypad 1 and End"],
    "keypad_2": ["5A", "Keypad 2 and Down Arrow"],
    "keypad_3": ["5B", "Keypad 3 and PageDn"],
    "keypad_4": ["5C", "Keypad 4 and Left Arrow"],
    "keypad_5": ["5D", "Keypad 5"],
    "keypad_6": ["5E", "Keypad 6 and Right Arrow"],
    "keypad_7": ["5F", "Keypad 7 and Home"],
    "keypad_8": ["60", "Keypad 8 and Up Arrow"],
    "keypad_9": ["61", "Keypad 9 and PageUp"],
    "keypad_0": ["62", "Keypad 0 and Insert"],
    "keypad_dot": ["63", "Keypad . and Delete"],
    "non_us_backslash": ["64", "Keyboard Non-US \ and |"],
    "power": ["66", "Keyboard Power"],
    "keypad_equals": ["67", "Keypad ="],
    "f13": ["68", "Keyboard F13"],
    "f14": ["69", "Keyboard F14"],
    "f15": ["6A", "Keyboard F15"],
    "left_control": ["E0", "Keyboard LeftControl"],
    "left_shift": ["E1", "Keyboard LeftShift"],
    "left_alt": ["E2", "Keyboard LeftAlt"],
    "left_command": ["E3", "Keyboard Left GUI"],
    "right_control": ["E4", "Keyboard RightControl"],
    "right_shift": ["E5", "Keyboard RightShift"],
    "right_alt": ["E6", "Keyboard RightAlt"],
    "right_command": ["E7", "Keyboard Right GUI"]
}


def key_to_id(key):
    return "0x7000000" + keycodes[key][0]


def generate_single_mapping(source_key, destination_key):
    return '{"HIDKeyboardModifierMappingSrc":' + key_to_id(source_key) + ',"HIDKeyboardModifierMappingDst":' + key_to_id(destination_key) + '}'


def concatenate_mappings(list_of_single_mappings):
    string = ",".join(list_of_single_mappings)
    return string


def write_config(concatenated_mappings):
    string = '<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDsPropertyList-1.0.dtd"><plist version="1.0"><dict><key>Label</key><string>tv.rande.keywi</string><key>ProgramArguments</key><array><string>/usr/bin/hidutil</string><string>property</string><string>--set</string><string>{"UserKeyMapping":[' + concatenated_mappings + ']}</string></array><key>RunAtLoad</key><true/></dict></plist>'
    f = open(os.path.expanduser("~/Library/LaunchAgents/tv.rande.keywi.plist"), "w")
    f.write(string)
    f.close()


def get_existing_mappings():
    string = os.popen("hidutil property --get 'UserKeyMapping'").read()
    if len(string) < 5:
        return None
    listo = string.split()
    comma = True
    for i in range(len(listo)):
        if listo[i] == 'HIDKeyboardModifierMappingDst' or listo[i] == 'HIDKeyboardModifierMappingSrc':
            listo[i] = '"' + listo[i] + '"'
        if listo[i] == "=":
            listo[i] = ":"
            listo[i+1] =  "0x" + hex(int(listo[i+1][:-1])).upper()[2:]
            if comma:
                listo.insert(i+2, ",")
            comma = not comma
    return "".join(listo)[1:-1]


def add_mapping(source_key, destination_key):
    existing_mappings = get_existing_mappings()
    new_mapping = generate_single_mapping(source_key, destination_key)

    if existing_mappings is None:
        concatenated_mappings = new_mapping
    else:
        concatenated_mappings = concatenate_mappings([existing_mappings, new_mapping])
    write_config(concatenated_mappings)
    os.system('hidutil property --set ' + "'" + '{"UserKeyMapping":[' + concatenated_mappings + ']}' + "'")


args = sys.argv[1:]
if len(args) == 0:
    print("usage: keywi [options] source_key destination_key")

source = None
destination = None

for arg in args:
    if arg.startswith("-"):
        if arg == "-clear":
            os.system("""hidutil property --set '{"UserKeyMapping":[]}'""")
        if arg == "-get":
            os.system("""hidutil property --get 'UserKeyMapping'""")
    else:
        if arg not in keycodes:
            continue
        if source is None:
            source = arg
        else:
            destination = arg

if destination is not None:
    add_mapping(source, destination)